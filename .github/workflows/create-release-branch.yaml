name: Create Release Branch

on:
  workflow_call:
    inputs:
      version:
        description: 'Semantic version number (e.g., 0.0.1)'
        required: true
        type: string

jobs:
  create-release-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate version format
        id: validate_version
        run: |
          if [[ ! "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "## Version Validation Report" > report.md
            echo "" >> report.md
            echo "### :x: Invalid version format" >> report.md
            echo "Please use semantic versioning (e.g., 0.0.1)." >> report.md
            exit 1
          else
            echo "## Validation Report" > report.md
            echo "" >> report.md
            echo "### :white_check_mark: Version format is valid" >> report.md
          fi

      - name: Version Validation Summary
        if: always()
        run: |
            cat report.md >> $GITHUB_STEP_SUMMARY

      - name: Check if branch already exists
        id: check_branch
        run: |
          BRANCH_NAME="release/v${{ inputs.version }}"
          if git ls-remote --exit-code --heads origin $BRANCH_NAME; then
            echo "## Branch Validation Report" > branch_report.md
            echo "" >> branch_report.md
            echo "### :x: Branch $BRANCH_NAME already exists." >> branch_report.md
            exit 1
          else
            echo "## Validation Report" > branch_report.md
            echo "" >> branch_report.md
            echo "### :white_check_mark: Branch $BRANCH_NAME does not exist." >> branch_report.md
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Add branch validation report to GitHub summary
        if: always()
        run: cat branch_report.md >> $GITHUB_STEP_SUMMARY

      - name: Create release branch
        id: create_branch
        run: |
          BRANCH_NAME="release/v${{ inputs.version }}"
          git checkout -b $BRANCH_NAME
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Update version in gradle.properties
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          sed -i "s/^version=.*/version=${{ inputs.version }}/" gradle.properties
          git add gradle.properties
          git commit -m "Update version to ${{ inputs.version }}"
          git push --set-upstream origin ${{ env.branch_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate release report
        run: |
            REPO_URL="https://github.com/${{ github.repository }}.git"
            echo "## Release Report" > release_report.md
            echo "" >> release_report.md
            echo "### :link: [View Release Branch on GitHub](https://github.com/${{ github.repository }}/tree/$BRANCH_NAME)" >> release_report.md
            echo "" >> release_report.md
            echo "### :rocket: Commands to clone and checkout the release branch" >> release_report.md
            echo "\`\`\`bash" >> release_report.md
            echo "git clone $REPO_URL" >> release_report.md
            echo "cd $(basename $REPO_URL .git)" >> release_report.md
            echo "git checkout ${{env.branch_name}}" >> release_report.md
            echo "\`\`\`" >> release_report.md

      - name: Add release report to GitHub summary
        if: always()
        run: cat release_report.md >> $GITHUB_STEP_SUMMARY