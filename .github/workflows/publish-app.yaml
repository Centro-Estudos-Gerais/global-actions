name: Build and Publish Docker Image

on:
    workflow_call:
        inputs:
            isLatestTag:
                description: 'Is this the latest tag?'
                type: boolean
                required: true
                default: false
        secrets:
            GH_TOKEN:
                required: true

jobs:
    setup-pipeline:
        runs-on: ubuntu-latest
        outputs:
            artifact-name: ${{ steps.create-artifact-name.outputs.artifact-name }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Setup Java Environment
              uses: actions/setup-java@v2
              with:
                java-version: '21'
                distribution: 'temurin'
                cache: gradle

           
            
            - name: Build do Projeto
              uses: gradle/gradle-build-action@v2
              with:
                arguments: assemble

            - name: Create Artifact Name
              id: create-artifact-name
              run: echo "artifact-name=build-artifacts-${{ github.run_id }}" >> $GITHUB_OUTPUT
            
            
            - name: Uploads build folder
              uses: actions/upload-artifact@v4
              with:
                name: ${{ steps.create-artifact-name.outputs.artifact-name}}
                path: build/
                retention-days: 1
    run-tests:
        runs-on: ubuntu-latest
        needs: setup-pipeline
        steps:
        
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Setup Java Environment
          uses: actions/setup-java@v2
          with:
            java-version: '21'
            distribution: 'temurin'
            cache: gradle

        - name: Download build artifacts
          uses: actions/download-artifact@v4
          with:
            name: ${{ needs.setup-pipeline.outputs.artifact-name }}

        - name: Executar Testes
          uses: gradle/gradle-build-action@v2
          with:
            arguments: test

    build-docker-image:
        runs-on: ubuntu-latest
        needs: setup-pipeline
        steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          
        - name: Setup Java Environment
          uses: actions/setup-java@v2
          with:
            java-version: '21'
            distribution: 'temurin'
            cache: gradle

        - name: Download build artifacts
          uses: actions/download-artifact@v4
          with:
            name: ${{ needs.setup-pipeline.outputs.artifact-name }}

        - name: Extract version from build.gradle
          id: get_version
          run: |
            VERSION=$(grep -oP 'version=\K.*' gradle.properties)
            echo "VERSION=$VERSION" >> $GITHUB_ENV

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to GitHub Container Registry
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GH_TOKEN }}
            
        - name: Generate Docker tag
          id: generate_tag
          run: |
            REPO_NAME=$(basename ${{ github.repository }})
            TAG="ceg/${REPO_NAME}:${{ env.VERSION }}"
            TAG_LATEST="ceg/${REPO_NAME}:latest"
            echo "TAG=$TAG" >> $GITHUB_ENV
            echo "TAG_LATEST=$TAG_LATEST" >> $GITHUB_ENV

        - name: Build and push Docker image
          uses: docker/build-push-action@v2
          with:
            context: .
            push: true
            tags: ${{ env.TAG }}         
            
        - name: Build and push Docker image as latest tag
          if: ${{ inputs.isLatestTag == true }}
          uses: docker/build-push-action@v2
          with:
            context: .
            push: true
            tags: ${{ env.TAG_LATEST }}    

        - name: Generate report latest tag
          if: ${{ inputs.isLatestTag == true }}
          run: |
              echo "## Build Report" >> $GITHUB_STEP_SUMMARY
              echo "Version: ${{ env.version }}" >> $GITHUB_STEP_SUMMARY
              echo "Repository: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
              echo "Build and push completed successfully." >> $GITHUB_STEP_SUMMARY

        - name: Generate report
          run: |
            echo "## Build Report" >> $GITHUB_STEP_SUMMARY
            echo "Version: ${{ env.version }}" >> $GITHUB_STEP_SUMMARY
            echo "Repository: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
            echo "Build and push completed successfully." >> $GITHUB_STEP_SUMMARY
            echo "To test the image, run the following commands:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`sh" >> $GITHUB_STEP_SUMMARY
            echo "docker pull ${{ env.TAG }}" >> $GITHUB_STEP_SUMMARY
            echo "docker run -d ${{ env.TAG }}" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
