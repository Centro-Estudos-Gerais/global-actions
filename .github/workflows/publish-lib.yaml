name: Lib CI Pipeline

on:
  workflow_call:
    secrets:
      GH_TOKEN:
        required: true

  push:
    branches:
      - release/v**
jobs:
  setup-pipeline:
    runs-on: ubuntu-latest
    outputs:
      gradle-cache-key: ${{ steps.create-gradlew-cache-key.outputs.gradle-cache-key }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Gradlew Cache Key
        id: create-gradlew-cache-key
        run: echo "gradle-cache-key=gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}" >> $GITHUB_OUTPUT
      
      - name: Setup Java Environment
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Build do Projeto
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assemble
      
      - name: Caches Gradle files
        uses: actions/cache@v4
        id: cache-gradle
        with:
          key: ${{ steps.create-gradlew-cache-key.outputs.gradle-cache-key }}
          path: |
            ~/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/21.0.*
            ~/.gradle/caches
            ~/.gradle/wrapper
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      
        

  run-tests:
    runs-on: ubuntu-latest
    needs: setup-pipeline
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java Environment
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Restores Cached Gradle Files
        uses: actions/cache@v4
        id: cache-gradle
        with:
          key: ${{ needs.setup-pipeline.outputs.gradle-cache-key }}
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Executar Testes
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test

        

  publish:
    runs-on: ubuntu-latest
    needs: setup-pipeline
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Java Environment
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Restores Cached Gradle Files
        uses: actions/cache@v4
        id: cache-gradle
        with:
          key: ${{ needs.setup-pipeline.outputs.gradle-cache-key }}
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      # TODO remover      

      - name: Publicar com Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publish
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  create-pr:
    runs-on: ubuntu-latest
    needs: [publish, run-tests]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-dept: 0

      - name: Sync with Remote
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git pull origin release/v0.0.2  # Sincroniza com o remoto

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GH_TOKEN }}
          branch: pr-${{ github.ref_name }}
          base: master
          title: "Merge from ${{ github.ref_name }} into master"
          body: "This PR merges changes from ${{ github.ref_name }} to master."
          delete-branch: true

        